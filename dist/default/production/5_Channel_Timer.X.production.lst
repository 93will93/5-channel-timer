

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jan 24 20:29:19 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F25K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELA	set	3896
    51  0000                     _INTCON2bits	set	4081
    52  0000                     _INTCON3bits	set	4080
    53  0000                     _INTCONbits	set	4082
    54  0000                     _PORTAbits	set	3968
    55  0000                     _TRISAbits	set	3986
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  000144                     __pcinit:
    61                           	opt stack 0
    62  000144                     start_initialization:
    63                           	opt stack 0
    64  000144                     __initialization:
    65                           	opt stack 0
    66  000144                     end_of_initialization:
    67                           	opt stack 0
    68  000144                     __end_of__initialization:
    69                           	opt stack 0
    70  000144  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    71  000146  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    72  000148  0E00               	movlw	low (__Lmediumconst shr (0+16))
    73  00014A  6EF8               	movwf	tblptru,c
    74  00014C  0100               	movlb	0
    75  00014E  EF91  F000         	goto	_main	;jump to C main() function
    76                           tblptru	equ	0xFF8
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt stack 0
    81  000001                     ??_isr:
    82  000001                     
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	18
    85  000013                     ??_startLEDSequence:
    86                           
    87                           ; 1 bytes @ 0x12
    88  000013                     	ds	1
    89  000014                     main@STATE:
    90                           	opt stack 0
    91                           
    92                           ; 1 bytes @ 0x13
    93  000014                     	ds	1
    94                           tblptru	equ	0xFF8
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 26 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;  STATE           1   19[COMRAM] enum E6627
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   115 ;;      Params:         0       0       0       0       0       0       0
   116 ;;      Locals:         1       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0
   118 ;;      Totals:         1       0       0       0       0       0       0
   119 ;;Total ram usage:        1 bytes
   120 ;; Hardware stack levels required when called:    3
   121 ;; This function calls:
   122 ;;		_initialize
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  000122                     __ptext0:
   130                           	opt stack 0
   131  000122                     _main:
   132                           	opt stack 0
   133                           
   134                           ;incstack = 0
   135  000122  D003               	goto	l36
   136  000124                     
   137                           ;main.c: 32: initialize();
   138  000124  EC7F  F000         	call	_initialize	;wreg free
   139                           
   140                           ;main.c: 37: break;
   141                           
   142                           ;main.c: 36: case monitoring:
   143                           
   144                           ;main.c: 35: break;
   145                           
   146                           ;main.c: 34: case ConnectedToPC:
   147                           
   148                           ;main.c: 33: break;
   149  000128  D002               	goto	l726
   150  00012A                     l36:
   151                           
   152                           ;main.c: 39: STATE = init;
   153  00012A  0E00               	movlw	0
   154  00012C  6E14               	movwf	main@STATE,c
   155  00012E                     l726:
   156                           
   157                           ;main.c: 41: }
   158  00012E  5014               	movf	main@STATE,w,c
   159                           
   160                           ; Switch size 1, requested type "space"
   161                           ; Number of cases is 3, Range of values is 0 to 2
   162                           ; switch strategies available:
   163                           ; Name         Instructions Cycles
   164                           ; simple_byte           10     6 (average)
   165                           ;	Chosen strategy is simple_byte
   166  000130  0A00               	xorlw	0	; case 0
   167  000132  B4D8               	btfsc	status,2,c
   168  000134  D7F7               	goto	l32
   169  000136  0A01               	xorlw	1	; case 1
   170  000138  B4D8               	btfsc	status,2,c
   171  00013A  D7F9               	goto	l726
   172  00013C  0A03               	xorlw	3	; case 2
   173  00013E  B4D8               	btfsc	status,2,c
   174  000140  D7F6               	goto	l726
   175  000142  D7F3               	goto	l36
   176  000144                     __end_of_main:
   177                           	opt stack 0
   178                           tblptru	equ	0xFF8
   179                           status	equ	0xFD8
   180                           
   181 ;; *************** function _initialize *****************
   182 ;; Defined at:
   183 ;;		line 47 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   197 ;;      Params:         0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; Hardware stack levels required when called:    2
   204 ;; This function calls:
   205 ;;		_setUpInterrupts
   206 ;;		_startLEDSequence
   207 ;; This function is called by:
   208 ;;		_main
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text1
   213  0000FE                     __ptext1:
   214                           	opt stack 0
   215  0000FE                     _initialize:
   216                           	opt stack 28
   217                           
   218                           ;main.c: 49: setUpInterrupts();
   219                           
   220                           ;incstack = 0
   221  0000FE  ECA9  F000         	call	_setUpInterrupts	;wreg free
   222                           
   223                           ;main.c: 50: ANSELA = 0;
   224  000102  0E00               	movlw	0
   225  000104  010F               	movlb	15	; () banked
   226  000106  6F38               	movwf	56,b	;volatile
   227                           
   228                           ; BSR set to: 15
   229                           ;main.c: 53: TRISAbits.RA0 = 0;
   230  000108  9092               	bcf	3986,0,c	;volatile
   231                           
   232                           ; BSR set to: 15
   233                           ;main.c: 54: TRISAbits.RA1 = 0;
   234  00010A  9292               	bcf	3986,1,c	;volatile
   235                           
   236                           ; BSR set to: 15
   237                           ;main.c: 55: TRISAbits.RA2 = 0;
   238  00010C  9492               	bcf	3986,2,c	;volatile
   239                           
   240                           ; BSR set to: 15
   241                           ;main.c: 56: TRISAbits.RA3 = 0;
   242  00010E  9692               	bcf	3986,3,c	;volatile
   243                           
   244                           ; BSR set to: 15
   245                           ;main.c: 57: TRISAbits.RA4 = 0;
   246  000110  9892               	bcf	3986,4,c	;volatile
   247                           
   248                           ; BSR set to: 15
   249                           ;main.c: 60: PORTAbits.RA0 = 0;
   250  000112  9080               	bcf	3968,0,c	;volatile
   251                           
   252                           ; BSR set to: 15
   253                           ;main.c: 61: PORTAbits.RA1 = 0;
   254  000114  9280               	bcf	3968,1,c	;volatile
   255                           
   256                           ; BSR set to: 15
   257                           ;main.c: 62: PORTAbits.RA2 = 0;
   258  000116  9480               	bcf	3968,2,c	;volatile
   259                           
   260                           ; BSR set to: 15
   261                           ;main.c: 63: PORTAbits.RA3 = 0;
   262  000118  9680               	bcf	3968,3,c	;volatile
   263                           
   264                           ; BSR set to: 15
   265                           ;main.c: 64: PORTAbits.RA4 = 0;
   266  00011A  9880               	bcf	3968,4,c	;volatile
   267                           
   268                           ; BSR set to: 15
   269                           ;main.c: 67: startLEDSequence();
   270  00011C  EC51  F000         	call	_startLEDSequence	;wreg free
   271  000120  0012               	return		;funcret
   272  000122                     __end_of_initialize:
   273                           	opt stack 0
   274                           tblptru	equ	0xFF8
   275                           status	equ	0xFD8
   276                           
   277 ;; *************** function _startLEDSequence *****************
   278 ;; Defined at:
   279 ;;		line 70 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0
   295 ;;      Temps:          1       0       0       0       0       0       0
   296 ;;      Totals:         1       0       0       0       0       0       0
   297 ;;Total ram usage:        1 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; Hardware stack levels required when called:    1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_initialize
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text2
   308  0000A2                     __ptext2:
   309                           	opt stack 0
   310  0000A2                     _startLEDSequence:
   311                           	opt stack 28
   312                           
   313                           ;main.c: 71: PORTAbits.RA0 = 1;
   314                           
   315                           ;incstack = 0
   316  0000A2  8080               	bsf	3968,0,c	;volatile
   317                           
   318                           ;main.c: 72: _delay((unsigned long)((10)*(16000000/4000.0)));
   319  0000A4  0E34               	movlw	52
   320  0000A6  6E13               	movwf	??_startLEDSequence& (0+255),c
   321  0000A8  0EF2               	movlw	242
   322  0000AA                     u17:
   323  0000AA  2EE8               	decfsz	wreg,f,c
   324  0000AC  D7FE               	bra	u17
   325  0000AE  2E13               	decfsz	??_startLEDSequence& (0+255),f,c
   326  0000B0  D7FC               	bra	u17
   327                           
   328                           ;main.c: 73: PORTAbits.RA0 = 0;
   329  0000B2  9080               	bcf	3968,0,c	;volatile
   330                           
   331                           ;main.c: 75: PORTAbits.RA1 = 1;
   332  0000B4  8280               	bsf	3968,1,c	;volatile
   333                           
   334                           ;main.c: 76: _delay((unsigned long)((10)*(16000000/4000.0)));
   335  0000B6  0E34               	movlw	52
   336  0000B8  6E13               	movwf	??_startLEDSequence& (0+255),c
   337  0000BA  0EF2               	movlw	242
   338  0000BC                     u27:
   339  0000BC  2EE8               	decfsz	wreg,f,c
   340  0000BE  D7FE               	bra	u27
   341  0000C0  2E13               	decfsz	??_startLEDSequence& (0+255),f,c
   342  0000C2  D7FC               	bra	u27
   343                           
   344                           ;main.c: 77: PORTAbits.RA1 = 0;
   345  0000C4  9280               	bcf	3968,1,c	;volatile
   346                           
   347                           ;main.c: 79: PORTAbits.RA2 = 1;
   348  0000C6  8480               	bsf	3968,2,c	;volatile
   349                           
   350                           ;main.c: 80: _delay((unsigned long)((10)*(16000000/4000.0)));
   351  0000C8  0E34               	movlw	52
   352  0000CA  6E13               	movwf	??_startLEDSequence& (0+255),c
   353  0000CC  0EF2               	movlw	242
   354  0000CE                     u37:
   355  0000CE  2EE8               	decfsz	wreg,f,c
   356  0000D0  D7FE               	bra	u37
   357  0000D2  2E13               	decfsz	??_startLEDSequence& (0+255),f,c
   358  0000D4  D7FC               	bra	u37
   359                           
   360                           ;main.c: 81: PORTAbits.RA2 = 0;
   361  0000D6  9480               	bcf	3968,2,c	;volatile
   362                           
   363                           ;main.c: 83: PORTAbits.RA3 = 1;
   364  0000D8  8680               	bsf	3968,3,c	;volatile
   365                           
   366                           ;main.c: 84: _delay((unsigned long)((10)*(16000000/4000.0)));
   367  0000DA  0E34               	movlw	52
   368  0000DC  6E13               	movwf	??_startLEDSequence& (0+255),c
   369  0000DE  0EF2               	movlw	242
   370  0000E0                     u47:
   371  0000E0  2EE8               	decfsz	wreg,f,c
   372  0000E2  D7FE               	bra	u47
   373  0000E4  2E13               	decfsz	??_startLEDSequence& (0+255),f,c
   374  0000E6  D7FC               	bra	u47
   375                           
   376                           ;main.c: 85: PORTAbits.RA3 = 0;
   377  0000E8  9680               	bcf	3968,3,c	;volatile
   378                           
   379                           ;main.c: 87: PORTAbits.RA4 = 1;
   380  0000EA  8880               	bsf	3968,4,c	;volatile
   381                           
   382                           ;main.c: 88: _delay((unsigned long)((10)*(16000000/4000.0)));
   383  0000EC  0E34               	movlw	52
   384  0000EE  6E13               	movwf	??_startLEDSequence& (0+255),c
   385  0000F0  0EF2               	movlw	242
   386  0000F2                     u57:
   387  0000F2  2EE8               	decfsz	wreg,f,c
   388  0000F4  D7FE               	bra	u57
   389  0000F6  2E13               	decfsz	??_startLEDSequence& (0+255),f,c
   390  0000F8  D7FC               	bra	u57
   391                           
   392                           ;main.c: 89: PORTAbits.RA4 = 0;
   393  0000FA  9880               	bcf	3968,4,c	;volatile
   394  0000FC  0012               	return		;funcret
   395  0000FE                     __end_of_startLEDSequence:
   396                           	opt stack 0
   397                           tblptru	equ	0xFF8
   398                           wreg	equ	0xFE8
   399                           status	equ	0xFD8
   400                           
   401 ;; *************** function _setUpInterrupts *****************
   402 ;; Defined at:
   403 ;;		line 97 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		None
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   417 ;;      Params:         0       0       0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_initialize
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text3
   432  000152                     __ptext3:
   433                           	opt stack 0
   434  000152                     _setUpInterrupts:
   435                           	opt stack 28
   436                           
   437                           ;main.c: 98: INTCONbits.GIE = 1;
   438                           
   439                           ;incstack = 0
   440  000152  8EF2               	bsf	intcon,7,c	;volatile
   441                           
   442                           ;main.c: 99: INTCONbits.INT0IE = 1;
   443  000154  88F2               	bsf	intcon,4,c	;volatile
   444                           
   445                           ;main.c: 100: INTCON3bits.INT1IE = 1;
   446  000156  86F0               	bsf	intcon3,3,c	;volatile
   447                           
   448                           ;main.c: 101: INTCON3bits.INT2IE = 1;
   449  000158  88F0               	bsf	intcon3,4,c	;volatile
   450                           
   451                           ;main.c: 102: INTCON2bits.INTEDG0 = 1;
   452  00015A  8CF1               	bsf	intcon2,6,c	;volatile
   453                           
   454                           ;main.c: 103: INTCONbits.RBIE = 1;
   455  00015C  86F2               	bsf	intcon,3,c	;volatile
   456  00015E  0012               	return		;funcret
   457  000160                     __end_of_setUpInterrupts:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           intcon	equ	0xFF2
   461                           intcon2	equ	0xFF1
   462                           intcon3	equ	0xFF0
   463                           wreg	equ	0xFE8
   464                           status	equ	0xFD8
   465                           
   466 ;; *************** function _isr *****************
   467 ;; Defined at:
   468 ;;		line 22 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		None
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   482 ;;      Params:         0       0       0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0       0       0
   484 ;;      Temps:         18       0       0       0       0       0       0
   485 ;;      Totals:        18       0       0       0       0       0       0
   486 ;;Total ram usage:       18 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		Interrupt level 2
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	intcode
   496  000008                     __pintcode:
   497                           	opt stack 0
   498  000008                     _isr:
   499                           	opt stack 28
   500                           
   501                           ;incstack = 0
   502  000008  8215               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   503  00000A  CFFA F001          	movff	pclath,??_isr
   504  00000E  CFFB F002          	movff	pclatu,??_isr+1
   505  000012  CFE9 F003          	movff	fsr0l,??_isr+2
   506  000016  CFEA F004          	movff	fsr0h,??_isr+3
   507  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
   508  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
   509  000022  CFD9 F007          	movff	fsr2l,??_isr+6
   510  000026  CFDA F008          	movff	fsr2h,??_isr+7
   511  00002A  CFF3 F009          	movff	prodl,??_isr+8
   512  00002E  CFF4 F00A          	movff	prodh,??_isr+9
   513  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
   514  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
   515  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
   516  00003E  CFF5 F00E          	movff	tablat,??_isr+13
   517  000042  C015  F00F         	movff	btemp,??_isr+14
   518  000046  C016  F010         	movff	btemp+1,??_isr+15
   519  00004A  C017  F011         	movff	btemp+2,??_isr+16
   520  00004E  C018  F012         	movff	btemp+3,??_isr+17
   521  000052  C012  F018         	movff	??_isr+17,btemp+3
   522  000056  C011  F017         	movff	??_isr+16,btemp+2
   523  00005A  C010  F016         	movff	??_isr+15,btemp+1
   524  00005E  C00F  F015         	movff	??_isr+14,btemp
   525  000062  C00E  FFF5         	movff	??_isr+13,tablat
   526  000066  C00D  FFF8         	movff	??_isr+12,tblptru
   527  00006A  C00C  FFF7         	movff	??_isr+11,tblptrh
   528  00006E  C00B  FFF6         	movff	??_isr+10,tblptrl
   529  000072  C00A  FFF4         	movff	??_isr+9,prodh
   530  000076  C009  FFF3         	movff	??_isr+8,prodl
   531  00007A  C008  FFDA         	movff	??_isr+7,fsr2h
   532  00007E  C007  FFD9         	movff	??_isr+6,fsr2l
   533  000082  C006  FFE2         	movff	??_isr+5,fsr1h
   534  000086  C005  FFE1         	movff	??_isr+4,fsr1l
   535  00008A  C004  FFEA         	movff	??_isr+3,fsr0h
   536  00008E  C003  FFE9         	movff	??_isr+2,fsr0l
   537  000092  C002  FFFB         	movff	??_isr+1,pclatu
   538  000096  C001  FFFA         	movff	??_isr,pclath
   539  00009A  9215               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   540  00009C  0011               	retfie		f
   541  00009E                     __end_of_isr:
   542                           	opt stack 0
   543  0000                     pclatu	equ	0xFFB
   544                           pclath	equ	0xFFA
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           prodh	equ	0xFF4
   550                           prodl	equ	0xFF3
   551                           intcon	equ	0xFF2
   552                           intcon2	equ	0xFF1
   553                           intcon3	equ	0xFF0
   554                           fsr0h	equ	0xFEA
   555                           fsr0l	equ	0xFE9
   556                           wreg	equ	0xFE8
   557                           fsr1h	equ	0xFE2
   558                           fsr1l	equ	0xFE1
   559                           fsr2h	equ	0xFDA
   560                           fsr2l	equ	0xFD9
   561                           status	equ	0xFD8
   562                           pclatu	equ	0xFFB
   563                           pclath	equ	0xFFA
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           intcon	equ	0xFF2
   571                           intcon2	equ	0xFF1
   572                           intcon3	equ	0xFF0
   573                           fsr0h	equ	0xFEA
   574                           fsr0l	equ	0xFE9
   575                           wreg	equ	0xFE8
   576                           fsr1h	equ	0xFE2
   577                           fsr1l	equ	0xFE1
   578                           fsr2h	equ	0xFDA
   579                           fsr2l	equ	0xFD9
   580                           status	equ	0xFD8
   581                           
   582                           	psect	rparam
   583  0000                     pclatu	equ	0xFFB
   584                           pclath	equ	0xFFA
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           prodh	equ	0xFF4
   590                           prodl	equ	0xFF3
   591                           intcon	equ	0xFF2
   592                           intcon2	equ	0xFF1
   593                           intcon3	equ	0xFF0
   594                           fsr0h	equ	0xFEA
   595                           fsr0l	equ	0xFE9
   596                           wreg	equ	0xFE8
   597                           fsr1h	equ	0xFE2
   598                           fsr1l	equ	0xFE1
   599                           fsr2h	equ	0xFDA
   600                           fsr2l	equ	0xFD9
   601                           status	equ	0xFD8
   602                           
   603                           	psect	temp
   604  000015                     btemp:
   605                           	opt stack 0
   606  000015                     	ds	1
   607  0000                     int$flags	set	btemp
   608  0000                     wtemp6	set	btemp+1
   609                           pclatu	equ	0xFFB
   610                           pclath	equ	0xFFA
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           intcon	equ	0xFF2
   618                           intcon2	equ	0xFF1
   619                           intcon3	equ	0xFF0
   620                           fsr0h	equ	0xFEA
   621                           fsr0l	equ	0xFE9
   622                           wreg	equ	0xFE8
   623                           fsr1h	equ	0xFE2
   624                           fsr1l	equ	0xFE1
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _initialize->_startLEDSequence

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                             19 COMRAM     1     1      0
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                    _setUpInterrupts
                   _startLEDSequence
 ---------------------------------------------------------------------------------
 (2) _startLEDSequence                                     1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setUpInterrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _setUpInterrupts
     _startLEDSequence

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     14      14       1       21.3%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jan 24 20:29:19 2018

                       l32 0124                         l36 012A                         u17 00AA  
                       u27 00BC                         u37 00CE                         u47 00E0  
                       u57 00F2               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l726 012E  
             __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000                        _isr 0008  
                      wreg 000FE8               __CFG_LVP$OFF 000000                       ?_isr 0001  
                     _main 0122                       fsr0h 000FEA                       fsr1h 000FE2  
                     fsr2h 000FDA                       fsr0l 000FE9                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0015              __CFG_BORV$190 000000  
                     prodh 000FF4                       prodl 000FF3                       start 009E  
            __CFG_IESO$OFF 000000               ___param_bank 000000   __size_of_setUpInterrupts 000E  
                    ??_isr 0001                      ?_main 0001              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
       __CFG_MCLRE$INTMCLR 000000             __CFG_BOREN$OFF 000000                      pclath 000FFA  
                    tablat 000FF5                      status 000FD8                      wtemp6 0016  
          __initialization 0144               __end_of_main 0144                     ??_main 0014  
            __activetblptr 000002                     _ANSELA 000F38             __CFG_XINST$OFF 000000  
 __end_of_startLEDSequence 00FE          ??_setUpInterrupts 0013                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8            __CFG_HFOFST$OFF 000000  
               __accesstop 0060    __end_of__initialization 0144            __CFG_PBADEN$OFF 000000  
            ___rparam_used 000001             __pcstackCOMRAM 0001            __CFG_PLLCFG$OFF 000000  
       __CFG_CCP2MX$PORTC1 000000         __CFG_CCP3MX$PORTB5 000000            __CFG_WDTEN$SWON 000000  
          __CFG_WDTPS$2048 000000            __CFG_PWRTEN$OFF 000000                    __Hparam 0000  
                  __Lparam 0000            __CFG_STVREN$OFF 000000                    __pcinit 0144  
                  __ramtop 0600                 _initialize 00FE                    __ptext0 0122  
                  __ptext1 00FE                    __ptext2 00A2                    __ptext3 0152  
             __size_of_isr 0096       end_of_initialization 0144              __Lmediumconst 0000  
          _setUpInterrupts 0152          ?_startLEDSequence 0001         ??_startLEDSequence 0013  
                _PORTAbits 000F80                  _TRISAbits 000F92                ?_initialize 0001  
      start_initialization 0144                __end_of_isr 009E    __end_of_setUpInterrupts 0160  
      __size_of_initialize 0024                  __pintcode 0008           __CFG_PRICLKEN$ON 000000  
         ?_setUpInterrupts 0001                  main@STATE 0014  __size_of_startLEDSequence 005C  
              _INTCON2bits 000FF1                _INTCON3bits 000FF0                   __Hrparam 0000  
                 __Lrparam 0000          __CFG_P2BMX$PORTB5 000000               ??_initialize 0014  
            __size_of_main 0022         __end_of_initialize 0122                   int$flags 0015  
               _INTCONbits 000FF2                   intlevel2 0000          __CFG_T3CMX$PORTC0 000000  
         _startLEDSequence 00A2          __CFG_FOSC$INTIO67 000000  
